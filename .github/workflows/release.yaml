name: Deploy to Cloudflare and AWS

on:
  push:
    branches: ['main']

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v3
       - name: Use Node.js 16.x
         uses: actions/setup-node@v3
         with:
           node-version: 16.x
       - run: npm ci
       - run: npm test

  merge-stable:
    name: "Deploy Cloudflare pages: merge to stable branch"
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Merge development -> staging
      uses: devmasx/merge-branch@master
      with:
        type: now
        from_branch: main
        target_branch: stable
        github_token: ${{ github.token }}


  deploy-aws-sqs:
    name: Deploy to AWS and Cloudflare workers
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm ci --production

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Put AWS credentials as Cloudflare Workers vars in wrangler.toml
        run: |
          echo -e "\n[vars]" >> wrangler.toml
          grep -v ServerlessDeploymentBucketName vars.toml >> wrangler.toml
          rm vars.toml

      - name: Get AWS Secret for put into wrangler
        run: echo "AwsSecretAccessKey=$(aws ssm get-parameter --name /sqs-dekanat-changes-producer-user/secret --output text --query Parameter.Value)" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy cloudflare workers
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          secrets: |
            AwsSecretAccessKey
  

  purge-cloudflare-cache:
    name: Purge Cloudflare Pages (CDN) Cache
    needs:
      - deploy-aws-sqs
      - merge-stable
    runs-on: ubuntu-latest
    steps:
      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CF_API_TOKEN }}

